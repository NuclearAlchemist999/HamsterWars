@page "/battle"
@page "/battle/{id:int}"
@inject IBattleRepository _battle
@inject NavigationManager _nav

<PageTitle>Battle</PageTitle>

@if (Id != null)
{
    <div class="gallery-top">
        <h2>Result:</h2>
    </div>
    <div class="battle-container">
        @foreach (var hamster in _battle.Fighters)
        {
            <div class="hamster-item">
                <img src="@hamster.ImgName" alt="@hamster.HamsterName" class="hamster-img">
                <h3>@hamster.WinStatus</h3>
                <p>@hamster.HamsterName</p>
                <p>Games: @hamster.Games</p>
                <p>Wins: @hamster.Wins</p>
                <p>Losses: @hamster.Losses</p>
            </div>
        }
    </div>
}
<div class="gallery-top">
    <h2>@headLine</h2>
</div>
<div class="battle-container">
    @foreach (var hamster in _battle.Hamsters)
    {
       <div class="hamster-item">
            <img src="@hamster.ImgName" alt="@hamster.Name" @onclick="(() => UpdatePoints(hamster.Id))">
            <p>Name: @hamster.Name</p>
            <p>Age: @hamster.Age</p>
            <p>Favourite food: @hamster.FavFood</p>
            <p>Favourite thing: @hamster.FavThing</p>
        </div>
    }
</div>

@code {

   [Parameter]
    public int? Id { get; set; }

    string headLine = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            headLine = "Next battle";
            await _battle.GetFighters((int)Id);
            await _battle.GetTwoHamsters();
        }
        else
        {
            headLine = "Battle";
            await _battle.GetTwoHamsters();
        }

    }

    async Task UpdatePoints(int id)
    {
        string winStat = "";
        int gameId = await _battle.AddGame();
        var loser = _battle.Hamsters.FirstOrDefault(h => h.Id != id);

        if (loser != null)
        {   
            winStat = "Loser";
            await _battle.UpdateLosses(loser.Id);
            await _battle.AddFighter(loser.Id, gameId, winStat);
        }
        winStat = "Winner";
        await _battle.UpdateWins(id);
        await _battle.AddFighter(id, gameId, winStat);

        _nav.NavigateTo($"/battle/{gameId}", true);
        
    }

}

    
